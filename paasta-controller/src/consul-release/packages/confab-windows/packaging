. ./exiter.ps1

try {
    $BOSH_INSTALL_TARGET = Resolve-Path "${env:BOSH_INSTALL_TARGET}"

    $env:GOROOT="C:\var\vcap\packages\golang1.7-windows\go"
    $env:GOPATH="${BOSH_INSTALL_TARGET}"
    $env:PATH="${env:GOROOT}\bin;${env:PATH}"
    $env:GO15VENDOREXPERIMENT=1
    $pkg_path="github.com\cloudfoundry-incubator\consul-release\src\confab\confab"

    New-Item -ItemType "directory" -Force "${BOSH_INSTALL_TARGET}\src\github.com\cloudfoundry-incubator\consul-release\src"
    robocopy /E confab "${BOSH_INSTALL_TARGET}\src\github.com\cloudfoundry-incubator\consul-release\src\confab"
    if ($LASTEXITCODE -ge 8) {
        Exit 1
    }

    go.exe install "${pkg_path}"
    if ($LASTEXITCODE -ne 0) {
        Write-Error "Error compiling: ${pkg_path}"
        Exit 1
    }

    New-Item -ItemType "directory" -Force "emptyfolder"
    robocopy /PURGE "emptyfolder" "${BOSH_INSTALL_TARGET}/src"
    if ($LASTEXITCODE -ge 8) {
        Exit 1
    }
    robocopy /PURGE "emptyfolder" "${BOSH_INSTALL_TARGET}/pkg"
    if ($LASTEXITCODE -ge 8) {
        Exit 1
    }

    Remove-Item -Force -Recurse "${BOSH_INSTALL_TARGET}/src"
    Remove-Item -Force -Recurse "${BOSH_INSTALL_TARGET}/pkg"
    Remove-Item -Force -Recurse "emptyfolder"
} catch {
    Write-Error $_.Exception.Message
    Exit 1
}

Exit 0
