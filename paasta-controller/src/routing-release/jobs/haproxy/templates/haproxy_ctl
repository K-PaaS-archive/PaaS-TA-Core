#!/bin/bash

set -e

source /var/vcap/packages/routing_utils/pid_utils.sh
source /var/vcap/packages/routing_utils/syslog_utils.sh

PATH=/var/vcap/packages/haproxy/bin:/var/vcap/packages/haproxy-monitor/bin:$PATH

NAME=haproxy
DAEMON=$(which haproxy)
MONITOR=$(which haproxy-monitor)
CONFIG=/var/vcap/jobs/haproxy/config/haproxy.conf
DESC="HAProxy"
USER=vcap

HAPROXY_PID_FILE=/var/vcap/sys/run/haproxy/pid
MONITOR_PID_FILE=/var/vcap/sys/run/haproxy-monitor/pid
HAPROXY_LOG_DIR=/var/vcap/sys/log/haproxy

TIMESTAMP=$(which date)

test -x "${DAEMON}"
test -x "${MONITOR}"
test -f "${CONFIG}"

RETVAL=0

ensure_dir() {
    DIR=$1
    if [ ! -d "${DIR}" ] ; then
        mkdir -p "${DIR}"
        chown -R "${USER}":"${USER}" "${DIR}"
        chmod 755 "${DIR}"
    fi
}

ensure_dirs() {
    ensure_dir "$(dirname "${HAPROXY_PID_FILE}")"
    ensure_dir "$(dirname "${MONITOR_PID_FILE}")"
    ensure_dir "${HAPROXY_LOG_DIR}"
}

remove_pid() {
    rm -f "${HAPROXY_PID_FILE}"
    rmdir "$(dirname "${HAPROXY_PID_FILE}")" || :
}

start_haproxy() {
    status_haproxy
    if [ "${RETVAL}" = 0 ]; then
        echo "HAProxy is currently running"
    else
        RETVAL=0
        chown -R "${USER}":"${USER}" "$(dirname "${CONFIG}")"
        echo "$("${TIMESTAMP}"): Starting HAProxy"
        set +e
        exec chpst -u "${USER}":"${USER}" "${DAEMON}" -f "${CONFIG}" -D -p "${HAPROXY_PID_FILE}" 0<&-
        RETVAL=$?
        set -e
        case "${RETVAL}" in
            0)
                echo "$("${TIMESTAMP}"): Finished starting HAProxy"
                echo "SUCCESS"
                ;;
            *)
                echo "$("${TIMESTAMP}"): Errored starting HAProxy"
                echo "$("${TIMESTAMP}"): Errored starting HAProxy" >&2
                remove_pid
                echo "FAILED - check logs"
                RETVAL=1
                ;;
        esac
    fi
}

stop_haproxy() {
    status_haproxy
    if [ "${RETVAL}" = 0 ]; then
        set +e
        for pid in $(cat "${HAPROXY_PID_FILE}"); do
            kill ${pid} || RETVAL=$?
        done
        set -e
        if [ "${RETVAL}" = 0 ]; then
            remove_pid
        else
            echo "FAILED - check logs"
        fi
    else
        echo "HAProxy not running"
    fi
}

# RETVAL = 0 if running, != 0 if stopped
status_haproxy() {
    if [ -f "${HAPROXY_PID_FILE}" ]; then
        RETVAL=0
        set +e
        for pid in $(cat "${HAPROXY_PID_FILE}"); do
            kill -0 "${pid}" > /dev/null 2>&1 || RETVAL=3
        done
        kill -0 $(cat "${HAPROXY_PID_FILE}") > /dev/null 2>&1
        if [ $? != 0 ]; then
            RETVAL=3
        fi
        set -e
    else
        RETVAL=1
    fi
}

restart_haproxy() {
    stop_haproxy
    start_haproxy
}

reload_haproxy() {
    status_haproxy
    if [ "${RETVAL}" = 0 ]; then
        RETVAL=0
        echo "$("${TIMESTAMP}"): reloading HAProxy"
        set +e
        exec chpst -u "${USER}":"${USER}" "${DAEMON}" -f "${CONFIG}" -p "${HAPROXY_PID_FILE}" -D -sf $(cat $HAPROXY_PID_FILE) 0<&-
        RETVAL=$?
        set -e
        case "${RETVAL}" in
            0)
                echo "$("${TIMESTAMP}"): Finished reloading HAProxy"
                echo "SUCCESS"
                ;;
            *)
                echo "$("${TIMESTAMP}"): Errored reloading HAProxy"
                echo "$("${TIMESTAMP}"): Errored reloading HAProxy" >&2
                remove_pid
                echo "FAILED - check logs"
                RETVAL=1
                ;;
        esac
    else
        echo "HAProxy is not currently running"
    fi
}

case "$1" in
    start)
        echo -n "Starting ${DESC}: "
        ensure_dirs

        SCRIPT=$(basename $0)
        exec 1>> $HAPROXY_LOG_DIR/$SCRIPT.log
        exec 2>> $HAPROXY_LOG_DIR/$SCRIPT.err.log

        tee_output_to_sys_log "${HAPROXY_LOG_DIR}" "$SCRIPT"

        start_haproxy

        pid_guard ${MONITOR_PID_FILE}
        echo $$ > ${MONITOR_PID_FILE}
        exec chpst -u "${USER}":"${USER}" ${MONITOR} --pidFile ${HAPROXY_PID_FILE}

        echo "${NAME}."
        ;;
    stop)
        echo -n "Stopping ${DESC}: "
        stop_haproxy
        kill_and_wait ${MONITOR_PID_FILE}
        echo "${NAME}."
        ;;
    status)
        status_haproxy
        ;;
    reload)
        echo -n "Reloading ${DESC}: "
        ensure_dirs
        reload_haproxy
        echo "${NAME}."
        ;;
    force-reload|restart)
        echo -n "Restarting ${DESC}: "
        ensure_dirs
        restart_haproxy
        echo "${NAME}."
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|reload|force-reload}" >&2
        RETVAL=1
        ;;
esac

exit "${RETVAL}"
