// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"code.cloudfoundry.org/cf-tcp-router/configurer"
	"code.cloudfoundry.org/cf-tcp-router/models"
)

type FakeRouterConfigurer struct {
	ConfigureStub        func(routingTable models.RoutingTable) error
	configureMutex       sync.RWMutex
	configureArgsForCall []struct {
		routingTable models.RoutingTable
	}
	configureReturns struct {
		result1 error
	}
}

func (fake *FakeRouterConfigurer) Configure(routingTable models.RoutingTable) error {
	fake.configureMutex.Lock()
	fake.configureArgsForCall = append(fake.configureArgsForCall, struct {
		routingTable models.RoutingTable
	}{routingTable})
	fake.configureMutex.Unlock()
	if fake.ConfigureStub != nil {
		return fake.ConfigureStub(routingTable)
	} else {
		return fake.configureReturns.result1
	}
}

func (fake *FakeRouterConfigurer) ConfigureCallCount() int {
	fake.configureMutex.RLock()
	defer fake.configureMutex.RUnlock()
	return len(fake.configureArgsForCall)
}

func (fake *FakeRouterConfigurer) ConfigureArgsForCall(i int) models.RoutingTable {
	fake.configureMutex.RLock()
	defer fake.configureMutex.RUnlock()
	return fake.configureArgsForCall[i].routingTable
}

func (fake *FakeRouterConfigurer) ConfigureReturns(result1 error) {
	fake.ConfigureStub = nil
	fake.configureReturns = struct {
		result1 error
	}{result1}
}

var _ configurer.RouterConfigurer = new(FakeRouterConfigurer)
